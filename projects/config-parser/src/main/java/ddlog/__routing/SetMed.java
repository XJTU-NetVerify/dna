// automatically generated by the FlatBuffers compiler, do not modify

package ddlog.__routing;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class SetMed extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static SetMed getRootAsSetMed(ByteBuffer _bb) { return getRootAsSetMed(_bb, new SetMed()); }
  public static SetMed getRootAsSetMed(ByteBuffer _bb, SetMed obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SetMed __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long med() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createSetMed(FlatBufferBuilder builder,
      long med) {
    builder.startTable(1);
    SetMed.addMed(builder, med);
    return SetMed.endSetMed(builder);
  }

  public static void startSetMed(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addMed(FlatBufferBuilder builder, long med) { builder.addLong(0, med, 0L); }
  public static int endSetMed(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SetMed get(int j) { return get(new SetMed(), j); }
    public SetMed get(SetMed obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

