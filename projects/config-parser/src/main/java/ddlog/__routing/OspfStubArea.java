// automatically generated by the FlatBuffers compiler, do not modify

package ddlog.__routing;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class OspfStubArea extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static OspfStubArea getRootAsOspfStubArea(ByteBuffer _bb) { return getRootAsOspfStubArea(_bb, new OspfStubArea()); }
  public static OspfStubArea getRootAsOspfStubArea(ByteBuffer _bb, OspfStubArea obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public OspfStubArea __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ddlog.__routing.vnode_t node() { return node(new ddlog.__routing.vnode_t()); }
  public ddlog.__routing.vnode_t node(ddlog.__routing.vnode_t obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public long process() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long area() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public boolean noSummary() { int o = __offset(10); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean defaultOriginate() { int o = __offset(12); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean noRedis() { int o = __offset(14); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public long metric() { int o = __offset(16); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createOspfStubArea(FlatBufferBuilder builder,
      int nodeOffset,
      long process,
      long area,
      boolean no_summary,
      boolean default_originate,
      boolean no_redis,
      long metric) {
    builder.startTable(7);
    OspfStubArea.addMetric(builder, metric);
    OspfStubArea.addArea(builder, area);
    OspfStubArea.addProcess(builder, process);
    OspfStubArea.addNode(builder, nodeOffset);
    OspfStubArea.addNoRedis(builder, no_redis);
    OspfStubArea.addDefaultOriginate(builder, default_originate);
    OspfStubArea.addNoSummary(builder, no_summary);
    return OspfStubArea.endOspfStubArea(builder);
  }

  public static void startOspfStubArea(FlatBufferBuilder builder) { builder.startTable(7); }
  public static void addNode(FlatBufferBuilder builder, int nodeOffset) { builder.addOffset(0, nodeOffset, 0); }
  public static void addProcess(FlatBufferBuilder builder, long process) { builder.addLong(1, process, 0L); }
  public static void addArea(FlatBufferBuilder builder, long area) { builder.addLong(2, area, 0L); }
  public static void addNoSummary(FlatBufferBuilder builder, boolean noSummary) { builder.addBoolean(3, noSummary, false); }
  public static void addDefaultOriginate(FlatBufferBuilder builder, boolean defaultOriginate) { builder.addBoolean(4, defaultOriginate, false); }
  public static void addNoRedis(FlatBufferBuilder builder, boolean noRedis) { builder.addBoolean(5, noRedis, false); }
  public static void addMetric(FlatBufferBuilder builder, long metric) { builder.addLong(6, metric, 0L); }
  public static int endOspfStubArea(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public OspfStubArea get(int j) { return get(new OspfStubArea(), j); }
    public OspfStubArea get(OspfStubArea obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

